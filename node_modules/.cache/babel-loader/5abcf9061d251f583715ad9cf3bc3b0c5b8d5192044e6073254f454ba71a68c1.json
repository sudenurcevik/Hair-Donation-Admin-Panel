{"ast":null,"code":"/**\r\n * A helper class that manages the session data such as setting, deleting, getting user data or getting logged in state.\r\n */\nclass SessionHelper {\n  /**\r\n   * Sets the user data in the session as the user data saved in the local storage by the sign in component and sets the logged in state as true.\r\n   */\n  constructor() {\n    this.user = null;\n    this.isLoggedIn = false;\n    this.loginTime = null;\n    const userInfo = localStorage.getItem(\"user\");\n    if (userInfo) {\n      this.user = JSON.parse(userInfo);\n      this.isLoggedIn = true;\n      this.loginTime = new Date();\n    }\n  }\n\n  /**\r\n   * Sets the user data in the session, sets the logged in state as true and then saves this data in the local storage.\r\n   * @param {obj} user a json object that contains the user data such as the accessToken or the role\r\n   */\n  setUser(user) {\n    this.user = user;\n    this.isLoggedIn = true;\n    this.loginTime = new Date();\n    localStorage.setItem('user', JSON.stringify(user));\n    localStorage.setItem('loginTime', this.loginTime);\n  }\n\n  /**\r\n   * Removes the user data from the storage, clears the user data in the session and sets the logged in state as false.\r\n   */\n  deleteUser() {\n    localStorage.removeItem('user');\n    this.user = null;\n    this.isLoggedIn = false;\n    this.loginTime = null;\n  }\n\n  /**\r\n   * Gets the user data in the session.\r\n   */\n  getUser() {\n    return this.user;\n  }\n\n  /**\r\n   * Gets the logged in state in the session.\r\n   */\n  getIsLoggedIn() {\n    return this.isLoggedIn;\n  }\n  getLoginTime() {\n    return localStorage.getItem(\"loginTime\");\n  }\n  setLoginTime() {\n    this.loginTime = new Date();\n    localStorage.setItem(\"loginTime\", this.loginTime);\n  }\n}\nexport default new SessionHelper();","map":{"version":3,"names":["SessionHelper","constructor","user","isLoggedIn","loginTime","userInfo","localStorage","getItem","JSON","parse","Date","setUser","setItem","stringify","deleteUser","removeItem","getUser","getIsLoggedIn","getLoginTime","setLoginTime"],"sources":["C:/Users/sude/Desktop/HAIR_DONATION/ambrosia-frontend/src/helpers/SessionHelper.js"],"sourcesContent":["/**\r\n * A helper class that manages the session data such as setting, deleting, getting user data or getting logged in state.\r\n */\r\nclass SessionHelper {\r\n    user = null;\r\n    isLoggedIn = false;\r\n    loginTime = null;\r\n  \r\n    /**\r\n     * Sets the user data in the session as the user data saved in the local storage by the sign in component and sets the logged in state as true.\r\n     */\r\n    constructor() {\r\n      const userInfo = localStorage.getItem(\"user\");\r\n      if (userInfo) {\r\n        this.user = JSON.parse(userInfo);\r\n        this.isLoggedIn = true;\r\n        this.loginTime = new Date();\r\n      }\r\n    }\r\n  \r\n    /**\r\n     * Sets the user data in the session, sets the logged in state as true and then saves this data in the local storage.\r\n     * @param {obj} user a json object that contains the user data such as the accessToken or the role\r\n     */\r\n    setUser(user) {\r\n      this.user = user;\r\n          this.isLoggedIn = true;\r\n          this.loginTime = new Date();\r\n          localStorage.setItem('user', JSON.stringify(user));\r\n          localStorage.setItem('loginTime', this.loginTime);\r\n    }\r\n  \r\n    /**\r\n     * Removes the user data from the storage, clears the user data in the session and sets the logged in state as false.\r\n     */\r\n    deleteUser() {\r\n      localStorage.removeItem('user');\r\n          this.user = null;\r\n          this.isLoggedIn = false;\r\n          this.loginTime = null;\r\n    }\r\n  \r\n    /**\r\n     * Gets the user data in the session.\r\n     */\r\n    getUser() {\r\n      return this.user;\r\n    }\r\n  \r\n    /**\r\n     * Gets the logged in state in the session.\r\n     */\r\n    getIsLoggedIn() {\r\n      return this.isLoggedIn;\r\n    }\r\n  \r\n    getLoginTime() {\r\n      return localStorage.getItem(\"loginTime\");\r\n    }\r\n  \r\n    setLoginTime() {\r\n      this.loginTime = new Date();\r\n      localStorage.setItem(\"loginTime\", this.loginTime);\r\n    }\r\n  }\r\n  \r\n  export default new SessionHelper();\r\n  "],"mappings":"AAAA;AACA;AACA;AACA,MAAMA,aAAa,CAAC;EAKhB;AACJ;AACA;EACIC,WAAWA,CAAA,EAAG;IAAA,KAPdC,IAAI,GAAG,IAAI;IAAA,KACXC,UAAU,GAAG,KAAK;IAAA,KAClBC,SAAS,GAAG,IAAI;IAMd,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC7C,IAAIF,QAAQ,EAAE;MACZ,IAAI,CAACH,IAAI,GAAGM,IAAI,CAACC,KAAK,CAACJ,QAAQ,CAAC;MAChC,IAAI,CAACF,UAAU,GAAG,IAAI;MACtB,IAAI,CAACC,SAAS,GAAG,IAAIM,IAAI,CAAC,CAAC;IAC7B;EACF;;EAEA;AACJ;AACA;AACA;EACIC,OAAOA,CAACT,IAAI,EAAE;IACZ,IAAI,CAACA,IAAI,GAAGA,IAAI;IACZ,IAAI,CAACC,UAAU,GAAG,IAAI;IACtB,IAAI,CAACC,SAAS,GAAG,IAAIM,IAAI,CAAC,CAAC;IAC3BJ,YAAY,CAACM,OAAO,CAAC,MAAM,EAAEJ,IAAI,CAACK,SAAS,CAACX,IAAI,CAAC,CAAC;IAClDI,YAAY,CAACM,OAAO,CAAC,WAAW,EAAE,IAAI,CAACR,SAAS,CAAC;EACvD;;EAEA;AACJ;AACA;EACIU,UAAUA,CAAA,EAAG;IACXR,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC;IAC3B,IAAI,CAACb,IAAI,GAAG,IAAI;IAChB,IAAI,CAACC,UAAU,GAAG,KAAK;IACvB,IAAI,CAACC,SAAS,GAAG,IAAI;EAC3B;;EAEA;AACJ;AACA;EACIY,OAAOA,CAAA,EAAG;IACR,OAAO,IAAI,CAACd,IAAI;EAClB;;EAEA;AACJ;AACA;EACIe,aAAaA,CAAA,EAAG;IACd,OAAO,IAAI,CAACd,UAAU;EACxB;EAEAe,YAAYA,CAAA,EAAG;IACb,OAAOZ,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAC1C;EAEAY,YAAYA,CAAA,EAAG;IACb,IAAI,CAACf,SAAS,GAAG,IAAIM,IAAI,CAAC,CAAC;IAC3BJ,YAAY,CAACM,OAAO,CAAC,WAAW,EAAE,IAAI,CAACR,SAAS,CAAC;EACnD;AACF;AAEA,eAAe,IAAIJ,aAAa,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}