{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sude\\\\Desktop\\\\HAIR_DONATION\\\\ambrosia-frontend\\\\src\\\\pages\\\\AddAllergies.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Container, CssBaseline, Grid, Paper, Typography, FormControl, InputLabel, Select, MenuItem, IconButton, Box, Alert, useMediaQuery } from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { makeStyles } from \"@mui/styles\";\nimport logo from \"../assets/images/logo512.png\";\nimport CustomSnackbar from \"../components/Snackbar\";\nimport allergiesService from \"../services/allergies.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst exampleAllergies = [\"Milk\", \"Egg\", \"Fish\", \"Peanut\", \"Wheat\", \"Soy\", \"Sesame\"];\nconst userAllergies = [\"Fish\", \"Soy\"];\n\n// Custom styles\nconst useStyles = makeStyles({\n  addButton: {\n    backgroundColor: \"#5e714e\",\n    color: \"#fff\",\n    \"&:hover\": {\n      backgroundColor: \"#4a5f40\"\n    },\n    \"&:active\": {\n      backgroundColor: \"#3a4932\"\n    }\n  },\n  saveButton: {\n    marginTop: \"96px\",\n    backgroundColor: \"#5e714e\",\n    color: \"#fff\",\n    \"&:hover\": {\n      backgroundColor: \"#4a5f40\"\n    },\n    \"&:active\": {\n      backgroundColor: \"#3a4932\"\n    }\n  }\n});\nexport default function AddAllergies() {\n  _s();\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [allergies, setAllergies] = useState([]);\n  const classes = useStyles(); // Apply custom styles\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbar, setSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [severity, setSeverity] = useState(\"info\");\n  const [allergicIngredients, setAllergicIngredients] = useState([]); // from database\n  const matches = useMediaQuery(theme => theme.breakpoints.down(\"md\"));\n  const smallMatches = useMediaQuery(theme => theme.breakpoints.down(\"sm\"));\n  const getAllergies = async () => {\n    try {\n      const res = await allergiesService.getAllergies();\n      console.log(res);\n      if ((res === null || res === void 0 ? void 0 : res.status) === 200) {\n        let data = res === null || res === void 0 ? void 0 : res.data;\n        setAllergicIngredients(data);\n      } else {\n        var _res$data;\n        setSnackbarMessage(res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.message);\n        setSnackbar(true);\n        setSeverity(\"error\");\n      }\n    } catch (error) {\n      console.error(error);\n      // Handle any error, e.g., show an error snackbar\n    }\n  };\n\n  useEffect(() => {\n    getAllergies();\n  }, []);\n  const handleChange = event => {\n    setSelectedOption(event.target.value);\n  };\n  const handleAddAllergie = () => {\n    if (selectedOption && !allergies.includes(selectedOption)) {\n      const updatedAllergies = [...allergies, selectedOption];\n      setAllergies(updatedAllergies);\n      setSelectedOption(\"\");\n    }\n  };\n  const handleDeleteAllergy = index => {\n    const updatedAllergies = [...allergies];\n    updatedAllergies.splice(index, 1);\n    setAllergies(updatedAllergies);\n  };\n  const handleSaveChanges = () => {\n    const storedUser = localStorage.getItem(\"user\");\n    if (storedUser) {\n      const user = JSON.parse(storedUser);\n      user.allergies = allergies;\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      setSnackbar(true);\n      setSnackbarMessage(\"Changes saved successfully!\");\n      setSeverity(\"success\");\n    }\n  };\n  const handleSearch = text => {\n    console.log(text);\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = () => {\n    const storedUser = localStorage.getItem(\"user\");\n    if (storedUser) {\n      const user = JSON.parse(storedUser);\n      const localAllergies = user.allergies;\n      setAllergies(localAllergies);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CssBaseline, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(CustomSnackbar, {\n        snackbar: snackbar,\n        setSnackbar: setSnackbar,\n        snackbarMessage: snackbarMessage,\n        severity: severity,\n        autoHideDuration: 3000\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            style: {\n              padding: \"1rem\",\n              textAlign: \"center\"\n            },\n            sx: {\n              my: {\n                xs: 3,\n                md: 6\n              },\n              p: {\n                xs: 2,\n                md: 3\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: logo,\n              alt: \"logo\",\n              style: {\n                width: \"200px\",\n                height: \"200px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              sx: {\n                color: \"#5e714e\",\n                fontWeight: \"bold\",\n                marginTop: \"36px\",\n                marginBottom: \"36px\"\n              },\n              children: \"Full Allergies List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              flexDirection: \"column\",\n              paddingRight: 2,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                sx: {\n                  marginBottom: \"48px\"\n                },\n                style: smallMatches ? {\n                  width: \"100%\"\n                } : matches ? {\n                  width: \"80%\"\n                } : {\n                  width: \"60%\"\n                },\n                children: allergies.map((allergie, index) => /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    border: \"1px solid #adb5bd\",\n                    padding: \"10px\",\n                    margin: \"5px 24px\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    sx: {\n                      textAlign: \"left\"\n                    },\n                    children: allergie\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: () => handleDeleteAllergy(index),\n                    sx: {\n                      marginLeft: \"auto\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 214,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 23\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: smallMatches ? {\n                  width: \"100%\"\n                } : matches ? {\n                  width: \"80%\"\n                } : {\n                  width: \"60%\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h8\",\n                  sx: {\n                    color: \"#5e714e\",\n                    fontWeight: \"bold\",\n                    textAlign: \"left\",\n                    margin: \"24px\",\n                    display: \"block\"\n                  },\n                  children: \"Add Allergy:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  direction: \"row\",\n                  alignItems: \"center\",\n                  sx: {\n                    margin: \"0 24px\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 3,\n                    children: /*#__PURE__*/_jsxDEV(FormControl, {\n                      sx: {\n                        width: {\n                          xs: \"10rem\",\n                          md: \"15rem\"\n                        }\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                        id: \"example-dropdown-label\",\n                        sx: {\n                          backgroundColor: \"#fff\"\n                        },\n                        children: \"Choose from the menu\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 248,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Select, {\n                        labelId: \"example-dropdown-label\",\n                        id: \"example-dropdown\",\n                        value: selectedOption,\n                        onChange: handleChange,\n                        children: allergicIngredients.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: option,\n                          children: option\n                        }, option, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 261,\n                          columnNumber: 29\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 254,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 3,\n                    sx: {\n                      marginLeft: {\n                        xs: \"6rem\",\n                        md: \"3rem\"\n                      }\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      className: classes.addButton // Apply custom styles\n                      ,\n                      sx: {\n                        height: \"3.4rem\",\n                        width: \"auto\",\n                        backgroundColor: \"#5e714e\",\n                        color: \"#fff\",\n                        textTransform: \"none\"\n                      },\n                      onClick: handleAddAllergie,\n                      children: \"Add\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 273,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: classes.saveButton // Apply custom styles\n              ,\n              sx: {\n                marginTop: \"96px\",\n                padding: \"12px 36px\",\n                backgroundColor: \"#5e714e\",\n                color: \"#fff\",\n                textTransform: \"none\",\n                borderRadius: \"24px\"\n              },\n              onClick: handleSaveChanges,\n              children: \"Save Changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n_s(AddAllergies, \"w7DHSTd1H2f9MY0Po3xE0lKjcUs=\", false, function () {\n  return [useStyles, useMediaQuery, useMediaQuery];\n});\n_c = AddAllergies;\nvar _c;\n$RefreshReg$(_c, \"AddAllergies\");","map":{"version":3,"names":["React","useState","useEffect","Button","Container","CssBaseline","Grid","Paper","Typography","FormControl","InputLabel","Select","MenuItem","IconButton","Box","Alert","useMediaQuery","DeleteIcon","makeStyles","logo","CustomSnackbar","allergiesService","jsxDEV","_jsxDEV","exampleAllergies","userAllergies","useStyles","addButton","backgroundColor","color","saveButton","marginTop","AddAllergies","_s","selectedOption","setSelectedOption","allergies","setAllergies","classes","snackbarOpen","setSnackbarOpen","snackbar","setSnackbar","snackbarMessage","setSnackbarMessage","severity","setSeverity","allergicIngredients","setAllergicIngredients","matches","theme","breakpoints","down","smallMatches","getAllergies","res","console","log","status","data","_res$data","message","error","handleChange","event","target","value","handleAddAllergie","includes","updatedAllergies","handleDeleteAllergy","index","splice","handleSaveChanges","storedUser","localStorage","getItem","user","JSON","parse","setItem","stringify","handleSearch","text","fetchData","localAllergies","children","maxWidth","autoHideDuration","fileName","_jsxFileName","lineNumber","columnNumber","container","item","xs","elevation","style","padding","textAlign","sx","my","md","p","src","alt","width","height","variant","fontWeight","marginBottom","display","alignItems","flexDirection","paddingRight","map","allergie","border","margin","onClick","marginLeft","direction","id","labelId","onChange","option","className","textTransform","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/sude/Desktop/HAIR_DONATION/ambrosia-frontend/src/pages/AddAllergies.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  CssBaseline,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  IconButton,\r\n  Box,\r\n  Alert,\r\n  useMediaQuery,\r\n} from \"@mui/material\";\r\n\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport logo from \"../assets/images/logo512.png\";\r\nimport CustomSnackbar from \"../components/Snackbar\";\r\nimport allergiesService from \"../services/allergies.service\";\r\n\r\nconst exampleAllergies = [\r\n  \"Milk\",\r\n  \"Egg\",\r\n  \"Fish\",\r\n  \"Peanut\",\r\n  \"Wheat\",\r\n  \"Soy\",\r\n  \"Sesame\",\r\n];\r\n\r\nconst userAllergies = [\"Fish\", \"Soy\"];\r\n\r\n// Custom styles\r\nconst useStyles = makeStyles({\r\n  addButton: {\r\n    backgroundColor: \"#5e714e\",\r\n    color: \"#fff\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#4a5f40\",\r\n    },\r\n    \"&:active\": {\r\n      backgroundColor: \"#3a4932\",\r\n    },\r\n  },\r\n  saveButton: {\r\n    marginTop: \"96px\",\r\n    backgroundColor: \"#5e714e\",\r\n    color: \"#fff\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#4a5f40\",\r\n    },\r\n    \"&:active\": {\r\n      backgroundColor: \"#3a4932\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default function AddAllergies() {\r\n  const [selectedOption, setSelectedOption] = useState(\"\");\r\n  const [allergies, setAllergies] = useState([]);\r\n  const classes = useStyles(); // Apply custom styles\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n  const [snackbar, setSnackbar] = useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\r\n  const [severity, setSeverity] = useState(\"info\");\r\n  const [allergicIngredients, setAllergicIngredients] = useState([]); // from database\r\n  const matches = useMediaQuery((theme) => theme.breakpoints.down(\"md\"));\r\n  const smallMatches = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\r\n\r\n  const getAllergies = async () => {\r\n    try {\r\n      const res = await allergiesService.getAllergies();\r\n      console.log(res);\r\n      if (res?.status === 200) {\r\n        let data = res?.data;\r\n        setAllergicIngredients(data);\r\n      } else {\r\n        setSnackbarMessage(res?.data?.message);\r\n        setSnackbar(true);\r\n        setSeverity(\"error\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      // Handle any error, e.g., show an error snackbar\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllergies();\r\n  }, []);\r\n\r\n  const handleChange = (event) => {\r\n    setSelectedOption(event.target.value);\r\n  };\r\n\r\n  const handleAddAllergie = () => {\r\n    if (selectedOption && !allergies.includes(selectedOption)) {\r\n      const updatedAllergies = [...allergies, selectedOption];\r\n      setAllergies(updatedAllergies);\r\n      setSelectedOption(\"\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteAllergy = (index) => {\r\n    const updatedAllergies = [...allergies];\r\n    updatedAllergies.splice(index, 1);\r\n    setAllergies(updatedAllergies);\r\n  };\r\n\r\n  const handleSaveChanges = () => {\r\n    const storedUser = localStorage.getItem(\"user\");\r\n    if (storedUser) {\r\n      const user = JSON.parse(storedUser);\r\n      user.allergies = allergies;\r\n      localStorage.setItem(\"user\", JSON.stringify(user));\r\n      setSnackbar(true);\r\n      setSnackbarMessage(\"Changes saved successfully!\");\r\n      setSeverity(\"success\");\r\n    }\r\n  };\r\n\r\n  const handleSearch = (text) => {\r\n    console.log(text);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = () => {\r\n    const storedUser = localStorage.getItem(\"user\");\r\n    if (storedUser) {\r\n      const user = JSON.parse(storedUser);\r\n      const localAllergies = user.allergies;\r\n      setAllergies(localAllergies);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CssBaseline>\r\n      <Container maxWidth=\"lg\">\r\n        <CustomSnackbar\r\n          snackbar={snackbar}\r\n          setSnackbar={setSnackbar}\r\n          snackbarMessage={snackbarMessage}\r\n          severity={severity}\r\n          autoHideDuration={3000}\r\n        />\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            <Paper\r\n              elevation={3}\r\n              style={{ padding: \"1rem\", textAlign: \"center\" }}\r\n              sx={{\r\n                my: { xs: 3, md: 6 },\r\n                p: { xs: 2, md: 3 },\r\n              }}\r\n            >\r\n              <img\r\n                src={logo}\r\n                alt=\"logo\"\r\n                style={{ width: \"200px\", height: \"200px\" }}\r\n              />\r\n              <Typography\r\n                variant=\"h5\"\r\n                sx={{\r\n                  color: \"#5e714e\",\r\n                  fontWeight: \"bold\",\r\n                  marginTop: \"36px\",\r\n                  marginBottom: \"36px\",\r\n                }}\r\n              >\r\n                Full Allergies List\r\n              </Typography>\r\n\r\n              <Box\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                flexDirection=\"column\"\r\n                paddingRight={2}\r\n              >\r\n                <div\r\n                  sx={{ marginBottom: \"48px\" }}\r\n                  style={\r\n                    smallMatches\r\n                      ? { width: \"100%\" }\r\n                      : matches\r\n                      ? { width: \"80%\" }\r\n                      : { width: \"60%\" }\r\n                  }\r\n                >\r\n                  {allergies.map((allergie, index) => (\r\n                    <Box\r\n                      key={index}\r\n                      sx={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        border: \"1px solid #adb5bd\",\r\n                        padding: \"10px\",\r\n                        margin: \"5px 24px\",\r\n                      }}\r\n                    >\r\n                      <Typography variant=\"body1\" sx={{ textAlign: \"left\" }}>\r\n                        {allergie}\r\n                      </Typography>\r\n                      <IconButton\r\n                        onClick={() => handleDeleteAllergy(index)}\r\n                        sx={{ marginLeft: \"auto\" }}\r\n                      >\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                    </Box>\r\n                  ))}\r\n                </div>\r\n                <div\r\n                  style={\r\n                    smallMatches\r\n                      ? { width: \"100%\" }\r\n                      : matches\r\n                      ? { width: \"80%\" }\r\n                      : { width: \"60%\" }\r\n                  }\r\n                >\r\n                  <Typography\r\n                    variant=\"h8\"\r\n                    sx={{\r\n                      color: \"#5e714e\",\r\n                      fontWeight: \"bold\",\r\n                      textAlign: \"left\",\r\n                      margin: \"24px\",\r\n                      display: \"block\",\r\n                    }}\r\n                  >\r\n                    Add Allergy:\r\n                  </Typography>\r\n                  <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    alignItems=\"center\"\r\n                    sx={{ margin: \"0 24px\" }}\r\n                  >\r\n                    <Grid item xs={3}>\r\n                      <FormControl sx={{ width: { xs: \"10rem\", md: \"15rem\" } }}>\r\n                        <InputLabel\r\n                          id=\"example-dropdown-label\"\r\n                          sx={{ backgroundColor: \"#fff\" }}\r\n                        >\r\n                          Choose from the menu\r\n                        </InputLabel>\r\n                        <Select\r\n                          labelId=\"example-dropdown-label\"\r\n                          id=\"example-dropdown\"\r\n                          value={selectedOption}\r\n                          onChange={handleChange}\r\n                        >\r\n                          {allergicIngredients.map((option) => (\r\n                            <MenuItem key={option} value={option}>\r\n                              {option}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid\r\n                      item\r\n                      xs={3}\r\n                      sx={{ marginLeft: { xs: \"6rem\", md: \"3rem\" } }}\r\n                    >\r\n                      <Button\r\n                        className={classes.addButton} // Apply custom styles\r\n                        sx={{\r\n                          height: \"3.4rem\",\r\n                          width: \"auto\",\r\n                          backgroundColor: \"#5e714e\",\r\n                          color: \"#fff\",\r\n                          textTransform: \"none\",\r\n                        }}\r\n                        onClick={handleAddAllergie}\r\n                      >\r\n                        Add\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n              </Box>\r\n\r\n              <Button\r\n                className={classes.saveButton} // Apply custom styles\r\n                sx={{\r\n                  marginTop: \"96px\",\r\n                  padding: \"12px 36px\",\r\n                  backgroundColor: \"#5e714e\",\r\n                  color: \"#fff\",\r\n                  textTransform: \"none\",\r\n                  borderRadius: \"24px\",\r\n                }}\r\n                onClick={handleSaveChanges}\r\n              >\r\n                Save Changes\r\n              </Button>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </CssBaseline>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}