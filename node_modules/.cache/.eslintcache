[{"C:\\Users\\sude\\Desktop\\HAIR_DONATION\\ambrosia-frontend\\src\\index.js":"1","C:\\Users\\sude\\Desktop\\HAIR_DONATION\\ambrosia-frontend\\src\\App.js":"2","C:\\Users\\sude\\Desktop\\HAIR_DONATION\\ambrosia-frontend\\src\\routes\\router.js":"3","C:\\Users\\sude\\Desktop\\HAIR_DONATION\\ambrosia-frontend\\src\\helpers\\AuthorizationHelper.js":"4","C:\\Users\\sude\\Desktop\\HAIR_DONATION\\ambrosia-frontend\\src\\helpers\\SessionHelper.js":"5","C:\\Users\\sude\\Desktop\\HAIR_DONATION\\ambrosia-frontend\\src\\components\\Loading.jsx":"6","C:\\Users\\sude\\Desktop\\HAIR_DONATION\\ambrosia-frontend\\src\\components\\NotFound.jsx":"7","C:\\Users\\sude\\Desktop\\HAIR_DONATION\\ambrosia-frontend\\src\\components\\Snackbar.jsx":"8","C:\\Users\\sude\\Desktop\\HAIR_DONATION\\ambrosia-frontend\\src\\pages\\LoginPage.jsx":"9","C:\\Users\\sude\\Desktop\\HAIR_DONATION\\ambrosia-frontend\\src\\components\\Navbar.jsx":"10","C:\\Users\\sude\\Desktop\\HAIR_DONATION\\ambrosia-frontend\\src\\services\\auth.service.js":"11","C:\\Users\\sude\\Desktop\\HAIR_DONATION\\ambrosia-frontend\\src\\pages\\Companies.jsx":"12","C:\\Users\\sude\\Desktop\\HAIR_DONATION\\ambrosia-frontend\\src\\services\\company.service.js":"13","C:\\Users\\sude\\Desktop\\HAIR_DONATION\\ambrosia-frontend\\src\\helpers\\RequestHelper.js":"14","C:\\Users\\sude\\Desktop\\HAIR_DONATION\\ambrosia-frontend\\src\\pages\\LandingPage.jsx":"15","C:\\Users\\sude\\Desktop\\HAIR_DONATION\\ambrosia-frontend\\src\\components\\DeleteConfirmationDialog.jsx":"16","C:\\Users\\sude\\Desktop\\HAIR_DONATION\\ambrosia-frontend\\src\\components\\SearchBar.jsx":"17"},{"size":230,"mtime":1691763740632,"results":"18","hashOfConfig":"19"},{"size":437,"mtime":1691763740523,"results":"20","hashOfConfig":"19"},{"size":2194,"mtime":1691823573646,"results":"21","hashOfConfig":"19"},{"size":565,"mtime":1691763740631,"results":"22","hashOfConfig":"19"},{"size":1938,"mtime":1691763740632,"results":"23","hashOfConfig":"19"},{"size":600,"mtime":1691763740628,"results":"24","hashOfConfig":"19"},{"size":1860,"mtime":1691766352535,"results":"25","hashOfConfig":"19"},{"size":1459,"mtime":1691763948173,"results":"26","hashOfConfig":"19"},{"size":6177,"mtime":1691822272453,"results":"27","hashOfConfig":"19"},{"size":5767,"mtime":1691851705899,"results":"28","hashOfConfig":"19"},{"size":524,"mtime":1691852330109,"results":"29","hashOfConfig":"19"},{"size":18795,"mtime":1691853360193,"results":"30","hashOfConfig":"19"},{"size":970,"mtime":1691850485860,"results":"31","hashOfConfig":"19"},{"size":3358,"mtime":1691842637451,"results":"32","hashOfConfig":"19"},{"size":387,"mtime":1691852171517,"results":"33","hashOfConfig":"19"},{"size":797,"mtime":1691847413416,"results":"34","hashOfConfig":"19"},{"size":2013,"mtime":1691850282797,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"1tvgjkx",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"39"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\sude\\Desktop\\HAIR_DONATION\\ambrosia-frontend\\src\\index.js",[],[],[],"C:\\Users\\sude\\Desktop\\HAIR_DONATION\\ambrosia-frontend\\src\\App.js",[],[],"C:\\Users\\sude\\Desktop\\HAIR_DONATION\\ambrosia-frontend\\src\\routes\\router.js",["91"],[],"import React, { lazy, Suspense } from \"react\";\r\nimport {\r\n  Route,\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport SessionHelper from \"../helpers/SessionHelper\";\r\nimport Loading from \"../components/Loading\";\r\n\r\n// lazy loading components for better performance\r\nconst Login = lazy(() => import(\"../pages/LoginPage\"));\r\n\r\nconst Navbar = lazy(() => import(\"../components/Navbar\"));\r\nconst LandingPage = lazy(() => import(\"../pages/LandingPage\"));\r\nconst Companies = lazy(() => import(\"../pages/Companies\"));\r\n\r\nconst NotFound = lazy(() => import(\"../components/NotFound\"));\r\n\r\nconst auth = [\r\n  {\r\n    path: \"/login\",\r\n    component: Login,\r\n    exact: false,\r\n  },\r\n];\r\n\r\nconst privateRoutes = [\r\n  \r\n  {\r\n    path: \"/companies\",\r\n    component: Companies,\r\n    exact: true,\r\n  },\r\n];\r\n\r\nfunction PrivateRoute({ children, ...rest }) {\r\n  const isLoggedIn = SessionHelper.getIsLoggedIn();\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={() =>\r\n        isLoggedIn ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default function AppRoutes() {\r\n  const user = SessionHelper.getUser();\r\n  const [update, setUpdate] = React.useState(false);\r\n\r\n  const ProtectedRoutes = () => (\r\n    <Switch>\r\n      {privateRoutes.map((route, index) => (\r\n        <Route\r\n          key={index}\r\n          path={route.path}\r\n          component={route.component}\r\n          exact={route.exact}\r\n        />\r\n      ))}\r\n      <Route path=\"*\" component={NotFound} />\r\n    </Switch>\r\n  );\r\n\r\n  return (\r\n    <Router>\r\n      <Suspense fallback={<Loading />}>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={LandingPage} />\r\n          {auth.map((route, index) => (\r\n            <Route key={index} path={route.path} exact={route.exact}>\r\n              <route.component update={update} setUpdate={setUpdate} />\r\n            </Route>\r\n          ))}\r\n          <PrivateRoute>\r\n            <Navbar />\r\n            <ProtectedRoutes />\r\n          </PrivateRoute>\r\n        </Switch>\r\n      </Suspense>\r\n    </Router>\r\n  );\r\n}\r\n","C:\\Users\\sude\\Desktop\\HAIR_DONATION\\ambrosia-frontend\\src\\helpers\\AuthorizationHelper.js",["92"],[],"C:\\Users\\sude\\Desktop\\HAIR_DONATION\\ambrosia-frontend\\src\\helpers\\SessionHelper.js",["93"],[],"/**\r\n * A helper class that manages the session data such as setting, deleting, getting user data or getting logged in state.\r\n */\r\nclass SessionHelper {\r\n    user = null;\r\n    isLoggedIn = false;\r\n    loginTime = null;\r\n  \r\n    /**\r\n     * Sets the user data in the session as the user data saved in the local storage by the sign in component and sets the logged in state as true.\r\n     */\r\n    constructor() {\r\n      const userInfo = localStorage.getItem(\"user\");\r\n      if (userInfo) {\r\n        this.user = JSON.parse(userInfo);\r\n        this.isLoggedIn = true;\r\n        this.loginTime = new Date();\r\n      }\r\n    }\r\n  \r\n    /**\r\n     * Sets the user data in the session, sets the logged in state as true and then saves this data in the local storage.\r\n     * @param {obj} user a json object that contains the user data such as the accessToken or the role\r\n     */\r\n    setUser(user) {\r\n      this.user = user;\r\n          this.isLoggedIn = true;\r\n          this.loginTime = new Date();\r\n          localStorage.setItem('user', JSON.stringify(user));\r\n          localStorage.setItem('loginTime', this.loginTime);\r\n    }\r\n  \r\n    /**\r\n     * Removes the user data from the storage, clears the user data in the session and sets the logged in state as false.\r\n     */\r\n    deleteUser() {\r\n      localStorage.removeItem('user');\r\n          this.user = null;\r\n          this.isLoggedIn = false;\r\n          this.loginTime = null;\r\n    }\r\n  \r\n    /**\r\n     * Gets the user data in the session.\r\n     */\r\n    getUser() {\r\n      return this.user;\r\n    }\r\n  \r\n    /**\r\n     * Gets the logged in state in the session.\r\n     */\r\n    getIsLoggedIn() {\r\n      return this.isLoggedIn;\r\n    }\r\n  \r\n    getLoginTime() {\r\n      return localStorage.getItem(\"loginTime\");\r\n    }\r\n  \r\n    setLoginTime() {\r\n      this.loginTime = new Date();\r\n      localStorage.setItem(\"loginTime\", this.loginTime);\r\n    }\r\n  }\r\n  \r\n  export default new SessionHelper();\r\n  ","C:\\Users\\sude\\Desktop\\HAIR_DONATION\\ambrosia-frontend\\src\\components\\Loading.jsx",[],[],"C:\\Users\\sude\\Desktop\\HAIR_DONATION\\ambrosia-frontend\\src\\components\\NotFound.jsx",[],[],"C:\\Users\\sude\\Desktop\\HAIR_DONATION\\ambrosia-frontend\\src\\components\\Snackbar.jsx",[],[],"C:\\Users\\sude\\Desktop\\HAIR_DONATION\\ambrosia-frontend\\src\\pages\\LoginPage.jsx",["94"],[],"import {\r\n  CircularProgress,\r\n  Container,\r\n  CssBaseline,\r\n  Grid,\r\n  Paper,\r\n  ThemeProvider,\r\n  createTheme,\r\n} from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport logo from \"../assets/logo.png\";\r\nimport CustomSnackbar from \"../components/Snackbar\";\r\nimport SessionHelper from \"../helpers/SessionHelper\";\r\nimport authService from \"../services/auth.service\";\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\r\nimport styled from \"styled-components\";\r\n\r\nconst theme = createTheme({\r\n  typography: {\r\n    fontFamily: \"Poppins, sans-serif\",\r\n  },\r\n});\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin-top: 2rem;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  transition: background-color 0.3s ease-in-out;\r\n\r\n  &:hover {\r\n    background-color: #0056b3;\r\n  }\r\n`;\r\n\r\nexport default function LoginPage({ update, setUpdate }) {\r\n  const classes = useStyles();\r\n  const matches = useMediaQuery(\"(min-width:1020px)\");\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [snackbar, setSnackbar] = React.useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = React.useState(\"\");\r\n  const [severity, setSeverity] = React.useState(\"info\");\r\n  const history = useHistory();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const user = {\r\n      email: email,\r\n      password: password,\r\n    };\r\n    console.log(user);\r\n    console.log(password);\r\n    const res = await authService.login(user);\r\n    console.log(res);\r\n    if (res?.status === 200) {\r\n      SessionHelper.setUser(res?.data);\r\n      setUpdate(!update);\r\n      history?.location?.state\r\n        ? history.push(history?.location?.state?.from?.pathname)\r\n        : history.push(\"/companies\");\r\n    } else {\r\n      setSnackbarMessage(res?.data?.message);\r\n      setSnackbar(true);\r\n      setSeverity(\"error\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      handleLogin(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline>\r\n        <Container fluid>\r\n          <Grid align=\"center\">\r\n            {snackbar && (\r\n              <CustomSnackbar message={snackbarMessage} severity={severity} />\r\n            )}\r\n            <Paper\r\n              elevation={3}\r\n              className={\r\n                matches ? classes.paperStyle : classes.paperStyleMobile\r\n              }\r\n            >\r\n              <Grid align=\"center\">\r\n                <img\r\n                  alt=\"logo\"\r\n                  src={logo}\r\n                  style={{ width: \"70%\", height: \"\" }}\r\n                />\r\n                <h2 className={classes.title}>Log In</h2>\r\n              </Grid>\r\n              <Grid className={classes.inputGrid}>\r\n                <label className={classes.label}>Email</label>\r\n                <Input\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  placeholder=\"Enter your email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  onKeyDown={handleKeyPress}\r\n                />\r\n                <label className={classes.label}>Password</label>\r\n                <Input\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  placeholder=\"Enter your password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  onKeyDown={handleKeyPress}\r\n                />\r\n              </Grid>\r\n\r\n              <div className={classes.buttonContainer}>\r\n                <Button\r\n                  type=\"submit\"\r\n                  onClick={(e) => {\r\n                    if (email === \"\") {\r\n                      setSnackbarMessage(\"Please enter your email\");\r\n                      setSeverity(\"error\");\r\n                      setSnackbar(true);\r\n                    } else if (password === \"\") {\r\n                      setSnackbarMessage(\"Please enter your password\");\r\n                      setSeverity(\"error\");\r\n\r\n                      setSnackbar(true);\r\n                    } else {\r\n                      handleLogin(e);\r\n                    }\r\n                  }}\r\n                >\r\n                  {loading ? (\r\n                    <>\r\n                      Logging in...\r\n                      <CircularProgress\r\n                        size={16}\r\n                        style={{ marginLeft: \"8px\" }}\r\n                      />\r\n                    </>\r\n                  ) : (\r\n                    \"Login\"\r\n                  )}\r\n                </Button>\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n        </Container>\r\n      </CssBaseline>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  paperStyle: {\r\n    padding: \"3% 5%\",\r\n    width: \"35%\",\r\n    margin: \"10% auto\",\r\n    background: \"linear-gradient(to right, #8000ba, #ff4b00)\",\r\n  },\r\n  paperStyleMobile: {\r\n    padding: \"3% 5%\",\r\n    width: \"80%\",\r\n    margin: \"10% auto\",\r\n    background: \"linear-gradient(to right, #8000ba, #ff4b00)\",\r\n  },\r\n  title: {\r\n    color: \"white\",\r\n    fontSize: \"1.5rem\",\r\n    fontWeight: \"lighter\",\r\n    marginTop: \"20%\",\r\n  },\r\n  label: {\r\n    display: \"block\",\r\n    width: \"100%\",\r\n    color: \"#505050\",\r\n    textAlign: \"left\",\r\n    fontSize: \"1rem\",\r\n    margin: \"3% 0 0\",\r\n    color: \"white\",\r\n  },\r\n  altText: {\r\n    color: \"#505050\",\r\n    fontSize: \"1rem\",\r\n    fontWeight: \"bold\",\r\n    marginTop: 10,\r\n  },\r\n  inputGrid: {\r\n    marginTop: \"2rem\",\r\n    borderRadius: 20,\r\n  },\r\n  buttonContainer: {\r\n    marginTop: 10,\r\n    textAlign: \"center\",\r\n    fontWeight: \"bolder\",\r\n  },\r\n  signUp: {\r\n    color: \"#505050\",\r\n    fontSize: \"1rem\",\r\n    marginTop: 45,\r\n  },\r\n});\r\n","C:\\Users\\sude\\Desktop\\HAIR_DONATION\\ambrosia-frontend\\src\\components\\Navbar.jsx",["95","96","97","98","99","100","101","102"],[],"C:\\Users\\sude\\Desktop\\HAIR_DONATION\\ambrosia-frontend\\src\\services\\auth.service.js",[],[],"C:\\Users\\sude\\Desktop\\HAIR_DONATION\\ambrosia-frontend\\src\\pages\\Companies.jsx",["103","104"],[],"C:\\Users\\sude\\Desktop\\HAIR_DONATION\\ambrosia-frontend\\src\\services\\company.service.js",[],[],"C:\\Users\\sude\\Desktop\\HAIR_DONATION\\ambrosia-frontend\\src\\helpers\\RequestHelper.js",[],[],"C:\\Users\\sude\\Desktop\\HAIR_DONATION\\ambrosia-frontend\\src\\pages\\LandingPage.jsx",[],[],"C:\\Users\\sude\\Desktop\\HAIR_DONATION\\ambrosia-frontend\\src\\components\\DeleteConfirmationDialog.jsx",[],[],"C:\\Users\\sude\\Desktop\\HAIR_DONATION\\ambrosia-frontend\\src\\components\\SearchBar.jsx",[],[],{"ruleId":"105","severity":1,"message":"106","line":58,"column":9,"nodeType":"107","messageId":"108","endLine":58,"endColumn":13},{"ruleId":"105","severity":1,"message":"106","line":4,"column":7,"nodeType":"107","messageId":"108","endLine":4,"endColumn":11},{"ruleId":"109","severity":1,"message":"110","line":67,"column":3,"nodeType":"111","endLine":67,"endColumn":38},{"ruleId":"112","severity":1,"message":"113","line":201,"column":5,"nodeType":"114","messageId":"115","endLine":201,"endColumn":10},{"ruleId":"105","severity":1,"message":"116","line":1,"column":8,"nodeType":"107","messageId":"108","endLine":1,"endColumn":16},{"ruleId":"105","severity":1,"message":"117","line":3,"column":8,"nodeType":"107","messageId":"108","endLine":3,"endColumn":14},{"ruleId":"105","severity":1,"message":"118","line":5,"column":8,"nodeType":"107","messageId":"108","endLine":5,"endColumn":14},{"ruleId":"105","severity":1,"message":"119","line":35,"column":7,"nodeType":"107","messageId":"108","endLine":35,"endColumn":18},{"ruleId":"105","severity":1,"message":"120","line":48,"column":10,"nodeType":"107","messageId":"108","endLine":48,"endColumn":22},{"ruleId":"105","severity":1,"message":"121","line":48,"column":24,"nodeType":"107","messageId":"108","endLine":48,"endColumn":39},{"ruleId":"105","severity":1,"message":"106","line":49,"column":9,"nodeType":"107","messageId":"108","endLine":49,"endColumn":13},{"ruleId":"105","severity":1,"message":"122","line":51,"column":9,"nodeType":"107","messageId":"108","endLine":51,"endColumn":27},{"ruleId":"105","severity":1,"message":"123","line":79,"column":10,"nodeType":"107","messageId":"108","endLine":79,"endColumn":17},{"ruleId":"105","severity":1,"message":"124","line":82,"column":10,"nodeType":"107","messageId":"108","endLine":82,"endColumn":20},"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","no-dupe-keys","Duplicate key 'color'.","ObjectExpression","unexpected","'MenuIcon' is defined but never used.","'Avatar' is defined but never used.","'Button' is defined but never used.","'StyledBadge' is assigned a value but never used.","'profileImage' is assigned a value but never used.","'setProfileImage' is assigned a value but never used.","'handleOpenUserMenu' is assigned a value but never used.","'loading' is assigned a value but never used.","'searchText' is assigned a value but never used."]